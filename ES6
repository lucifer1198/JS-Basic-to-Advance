// Block Scope & let keyword
/* 

let x=1
for(let x=0; x<10;x++)
{
	console.log(x)	
}
console.log("x="+x)

*/
  
// Const Keyword
/*
const discountPercentage= 50;
discountPercentage=40;

console.log(discountPercentage);
*/

/*
let oldUser = true;
const discountPercentage = 10;

if(oldUser === true)
{
	const discountPercentage = 20;
	console.log("Under Block value: "+discountPercentage);
}
console.log("Global value: "+discountPercentage);
*/

//Arrow functions

/*

let multiply= (x,y) =>{
	console.log(x);
	console.log(y);
	return x*y;
}
console.log(multiply(4,8));

*/

/*

let multiply= (x,y) =>{
	console.log(x);
	console.log(y);
	return x*y;
}
console.log(multiply(4));

*/

/*

let multiply= (x,y=2) =>{
	console.log(x);
	console.log(y);
	return x*y;
}
console.log(multiply(4));

*/

/*

let multiply= (x=4,y=2) =>{
	console.log(x);
	console.log(y);
	return x*y;
}
console.log(multiply());

*/

/*

let multiply= (x,y) =>{
	console.log(x);
	console.log(y);
	return x+y;
}
console.log(multiply("hello"));
*/

// REST parameter
// This works fine by printing the provided ID in the argument

/*

let allUserAddress = [];
let storeUserAddress = (UserId,addressToStore) => {
//console.log(UserId);
//console.log(adressToStore);
allUserAddress.push({"UserId":UserId,"userAddress":addressToStore});
console.log(allUserAddress);
return allUserAddress;
}

let firstAddress = {
	"streetAddress":"2/60 Virat Khand, Gomti Nagar",
	"landmark":"Near Virat Market",
	"city":"Lucknow",
	"state":"UP",
	"pincode":226010
}

storeUserAddress(764034,firstAddress);

*/
// This prints UserId as UserID and UserAddress as useraddress
/*

let allUserAddress = [];

let storeUserAddress = (UserId,addressToStore) => {
//console.log(UserId);
//console.log(adressToStore);
allUserAddress.push({"UserId":"UserId","userAddress":"addressToStore"});
console.log(allUserAddress);
return allUserAddress;
}

let firstAddress = {
	"streetAddress":"2/60 Virat Khand, Gomti Nagar",
	"landmark":"Near Virat Market",
	"city":"Lucknow",
	"state":"UP",
	"pincode":226010
}
storeUserAddress(764034,firstAddress);

*/

/* 

let allUserAddress = [];

let storeUserAddress = (UserId,...addressToStore) => {
//console.log(UserId);
//console.log(adressToStore);
allUserAddress.push({"UserId":UserId,"userAddress":addressToStore});
console.log(allUserAddress);
return allUserAddress;
}

let firstAddress = {
	"streetAddress":"Virat Khand, Gomti Nagar",
	"landmark":"Near Virat Market",
	"city":"Lucknow",
	"state":"UP",
	"pincode":226010
}

let secondAddress = {
	"streetAddress":"Vineet Khand, Gomti Nagar",
	"landmark":"Virat khand chauraha",
	"city":"Lucknow",
	"state":"UP",
	"pincode":226010
}

storeUserAddress(764034,firstAddress,secondAddress);

*/

// Code for concat CSV
/*

let allPeopleIWantToInvite = [];

let pushToPartyList = (...people) => {
	let newPeopleArray = people;
	allPeopleIWantToInvite = allPeopleIWantToInvite.concat(newPeopleArray);
	console.log(allPeopleIWantToInvite)
	return allPeopleIWantToInvite;
}

pushToPartyList("Aniket","Anmol","Vivek");
pushToPartyList("Sayan","Rahul","Vijay");

*/

/*
let allPeopleIWantToInvite = [];

let pushToPartyList = (...people) => {
	console.log(people);
	let newPeopleArray = people;
	allPeopleIWantToInvite = allPeopleIWantToInvite.concat(newPeopleArray);
	console.log(allPeopleIWantToInvite)
	return allPeopleIWantToInvite;
}

pushToPartyList("Aniket","Anmol","Vivek");
//pushToPartyList("rtr","Rartrthul","Virtrtrtjay");
pushToPartyList("Sayan","Rahul","Vijay");

*/

//SPREAD parameter
/*

let sum = (x,y,z) => {
	return x+y+z;
}
const numbers=[1,2,3];
console.log(sum(numbers[0],numbers[1],numbers[2]));

*/
/*

let sum = (x,y,z) => {
	console.log(x);
	console.log(y);
	console.log(z);
	return x+y+z;
}
const numbers=[1,2,3];
console.log(sum(...numbers));

*/
// Concating two arrays using SPREAD
/*

var a = [45,24];
var b = [23,44];
var c = [...a,...b];
console.log(c)

*/

// Object literals
/*
let firstName = "Aniket";
let lastName = "Singh";

let nameOfPerson= {firstName,
				lastName,
				fullName(){
				return firstName +" "+lastName;
				}				
}

console.log(nameOfPerson.fullName());
*/

/*
let actualPrice = 5000;
let discount = 20;

let discountedPrice = {
	actualPrice,
	discount, 
	calculateDiscountedPrice(){
	return actualPrice - ((discount*actualPrice)/100)
	}
}
	
	console.log(discountedPrice);
	console.log(discountedPrice.calculateDiscountedPrice());
	*/
	
// Passing Key Value through a variable name
// This snippet prints --key: "Some value"--
/*
let key = "Some Key"
let value = "Some value"
let finalObject = {key : value}
console.log(finalObject);
*/
// This Prints --Some Key: "Some value"--
/*let key = "Some Key"
let value = "Some value"
let finalObject = {[key] : value}
console.log(finalObject);
*/

// template literals
/*
let firstSentence = "This is the first Sentence"
let secondSentence = "This is the second sentence"

console.log(`${firstSentence}.${secondSentence}`)
*/
/*
function generateEmail(name,message)
{
var generateMessage= `Hi,${name},\n 
 We have a Message for you: ${message}\n
 @Copyright to aniket`
return generateMessage
}

var result = generateEmail("Aniket","How are you?")
console.log(result)
*/
// evaluating an expression inside the curly braces
/*
function generateEmail(firstName,lastname,message)
{
var generateMessage= `Hi,${firstName+" "+lastname}\n 
 We have a Message for you: ${message}\n
 @Copyright to aniket`
return generateMessage
}

var result = generateEmail("Aniket","Singh","How are you?")
console.log(result)
*/

//escaping or ignoring the curly braces in the string
/*
let someParagraph= `Hello, this is just the text. See the object \${objectShow}`
console.log(someParagraph)
*/
// For Of loop
/*
 var user= [{
 		"name":"aniket",
		"age":21,
		"number":56656565},
	{
 		"name":"anmol",
		"age":21,
		"number":65888}	]
for(x of user){
		console.log(x)
	}
	*/
	
// Error as For Of works only  with arrays not with objects
	/*
	var user= {
 		"name":"aniket",
		"age":21,
		"number":56656565}
for(x in user){
		console.log(user[x])
	}
	*/
